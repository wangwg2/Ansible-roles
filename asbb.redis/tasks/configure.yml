# file: tasks/configure.yml
---
- name: configure | Set vm.overcommit_memory to 1 in /etc/sysctl.conf.
  sysctl:
   name: vm.overcommit_memory
   value: 1
   state: present

- name: configure | TCP backlog setting of 512.
  shell: echo 512 > /proc/sys/net/core/somaxconn
  
- name: configure | Shutdown transparent_hugepage.
  shell: "echo never > {{ item }}"
  with_items:
    - '/sys/kernel/mm/transparent_hugepage/enabled'
    - '/sys/kernel/mm/transparent_hugepage/defrag'

- name: configure | Set transparent_hugepage is never to /etc/rc.local.
  lineinfile: dest=/etc/rc.local line='echo never > {{ item }}'
  with_items:
    - '/sys/kernel/mm/transparent_hugepage/enabled'
    - '/sys/kernel/mm/transparent_hugepage/defrag'

- name: configure | Create redis group.
  group: name={{ redis_user }}

- name: configure | Create redis user.
  user: name={{ redis_user }} group={{ redis_user }} shell=/sbin/nologin

- name: configure | Create redis db Directory.
  file: path={{ redis_dbdir }} state=directory owner={{ redis_user }} group={{ redis_user }}

- name: configure | Ensure Redis is configured.
  template:
    src: redis.conf.j2
    dest: "{{ redis_dir_path }}/redis.conf"
    mode: 0644
    owner: "{{ redis_user }}"
    group: "{{ redis_user }}"

# ==========================
# redis_as_service
- name: create redis systemd service
  template:
    src: "redis.service.j2"
    dest: /etc/systemd/system/{{ redis_daemon }}.service
    mode: 0644
  register: redis_unit_file
  when: redis_as_service and ansible_service_mgr|default() == "systemd"

- name: reload systemd daemon
  command: systemctl daemon-reload
  when:
    - ansible_service_mgr|default() == "systemd"
    - redis_unit_file is changed
    - redis_as_service
# ===========================

- name: configure | Ensure Redis daemon shell is configured.
  template:
    src: redis.sh.j2
    dest: "/etc/rc.d/init.d/{{ redis_daemon }}"
    mode: 0755
  when: ansible_service_mgr|default() != "systemd"

- name: configure | Add redis services.
  shell: "chkconfig --add {{ redis_daemon }}  && chkconfig {{ redis_daemon }} on"
  when: ansible_service_mgr|default() != "systemd"

- name: configure | Ensure Redis is running and enabled on boot.
  service: "name={{ redis_daemon }} state=started enabled=yes"



